<?xml version="1.0"?>
<net id="cpndemo">
  <prerunScript><![CDATA[
import socket
import struct
import os
import sys

AGENT='localhost:31234'
SERVICE=5678
TIMEOUT=20
members={}
errInfo=""

def isCommandValid(command, nodeId, nextTarget) :
  global errInfo
  if command != "add" and command != "del":
    errInfo="-1:unknown command"
    return False

  if not members.has_key(nodeId):
    errInfo="-1:unknown nodeId"
    return False

  next = nextTarget.split(":")
  if len(next) != 2:
    errInfo="-1:unknown nextTarget"
    return False

  ip   = next[0]
  port = int(next[1])
  try:
    struct.unpack("!I", socket.inet_aton(ip))[0]
    if port > 65535 or port < 1:
      errInfo="-1:target port error"
      return False
    return True
  except:
    errInfo="-1:target ip error"
    return False
]]></prerunScript>
  <place id="Start"/>
  <place id="Failed"/>
  <place id="PendingCommand"/>
  <place id="Success"/>
  <transition id="DoCommand">
    <scriptOperation><![CDATA[
def do_command(command,nodeId, nextTarget):
  cmd="yoyo_send -agent %s -service %s -timeout %s -rpc %s -str '%s' -str '%s'" \
            %(AGENT, SERVICE, TIMEOUT, nodeId, command, nextTarget)
  os.system("echo %s > /home/zhangtao/cpncmd"%cmd)
  output=os.popen(cmd, 'r').read().strip()
  os.system("echo %s > /home/zhangtao/cpndebug"%output)
  return output

success=True
errInfo = ""
output = do_command(command, nodeId, nextTarget)
if len(output) == 0:
  success=False
  errInfo = "connect to nextTarget timeout"
else:
  ret = output.split()[-1]
  if ret != "0":
    success=False
    errInfo=ret
  elif _errcode:
    success=False
    errInfo="%d:workflow internal error"%_errcode
]]></scriptOperation>
  </transition>
  <transition id="CheckCommand"/>
  <arc id="arc1" source="Start" target="CheckCommand">
    <expression>(command, nodeId, nextTarget)</expression>
  </arc>
  <arc id="arc4" source="DoCommand" target="Success">
    <expression>(command, nodeId, nextTarget) if success else None</expression>
  </arc>
  <arc id="arc5" source="CheckCommand" target="Failed">
    <expression>(command, nodeId, nextTarget, errInfo) if not isCommandValid(command, nodeId, nextTarget)  else None</expression>
  </arc>
  <arc id="arc2" source="CheckCommand" target="PendingCommand">
    <expression>(command, nodeId, nextTarget) if isCommandValid(command, nodeId, nextTarget)  else None</expression>
  </arc>
  <arc id="arc3" source="PendingCommand" target="DoCommand">
    <expression>(command, nodeId, nextTarget)</expression>
  </arc>
  <arc id="arc6" source="DoCommand" target="Failed">
    <expression>(command, nodeId, nextTarget, errInfo) if not success else None</expression>
  </arc>
</net>
