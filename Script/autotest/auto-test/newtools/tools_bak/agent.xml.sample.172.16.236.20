<Configuration>
  <Agent>
    <!--
      The agent listening port for client request. This is TCP port.
      Default: 1234
    -->
    <Listen>21235</Listen>

    <!--
      Period in second to recalculate statistics. 0 to disable statistics.
      Default = 30 seconds
    -->
    <Statistics-Period>30</Statistics-Period>

    <!--
      Specify the network interface to use for communicating with other agents. This
      interface will be used when using Broadcast or Multicast.
      Possible Value: First, interface name, interface's IP address
      Default: First
    -->
    <Network-Interface>172.16.236.20</Network-Interface>

    <!--
      The group daemon service. If not specified, it will use the same service as
      the normal channel.
      Default: 5888
    -->
    <Group-Daemon-Service>5888</Group-Daemon-Service>

    <!--
      The group daemon service priority. IF not specified, it will use the default
      priority (5)
      Default: 7
    -->
    <Group-Daemon-Service-Priority>7</Group-Daemon-Service-Priority>

    <!--
      Wait time for group suspect acknowledgement before retry (in ms)
      Default: 10000 ms
    -->
    <Group-Suspect-Timeout>10000</Group-Suspect-Timeout>

    <!--
      Number of retry for group suspect message
      Default: 10
    -->
    <Group-Suspect-Retry>10</Group-Suspect-Retry>

    <!--
      Specifying how to discover other agents' nodes
    -->
    <Discovery>
      <!--
        Method possible values: Broadcast, Multicast, Rendezvous and None
        If Multicast is used, Multicast-Address must be used
      -->
      <Method>Broadcast</Method>

      <!--
        The port that the agent will listen to and waiting for HELLO message. This is UDP port.
        Default: 1234
      -->
      <Ping-Listen>21235</Ping-Listen>

      <!--
        The period to send HELLO messages in seconds
      -->
      <Period>30</Period>

      <!--
        If the method is multicast, you have to specify the multicast address
        to send the HELLO messages.
      -->
      <!--
      <Multicast-Address>224.192.1.1</Multicast-Address>
      -->

      <!--
        If the method is rendezvous, you have to specify at least one rendezvous agent.
        A rendezvous agent will serve as the proxy to forward hello messages to all other
        known agents. If the port is not given, it will use ping port specified above.

        You can specify more rendezvous agents for fault tolerance and load balancing.
        When the agent starts up, it will send hello messages to all rendezvous agents.
        Afterwards it will just send hello message to a random one.

        onError attribute possible values are: Ignore, Fail(default). If host name
        resolution fails, specify whether or not to abort or ignore.
      -->
      <!--
      <Rendezvous-Agent>192.168.1.119:1234</Rendezvous-Agent>
      -->

      <!--
        Specify if this agent is one of the rendezvous agents.

        Possible Value: true, false, auto (default)
      -->
      <Is-Rendezvous-Agent>auto</Is-Rendezvous-Agent>

      <!--
        Optionally, you can specify the addresses of other agents here. The agent
        will send UDP messages to connect them. Useful when the agents are in
        different LAN. You can specify multiple of these. Every agent must have
        the same sets of additional agents. If the port is not given, it will use
        ping port specified above.

        The Rendezvous method neither requires nor supports Static-Agents.

        onError attribute possible values are: Ignore, Fail(default). If host name
        resolution fails, specify whether or not to abort or ignore.
      -->
      <!--
      <Static-Agent onError="Ignore">192.168.1.20:1234</Static-Agent>
      <Static-Agent onError="Ignore">192.168.1.21:1234</Static-Agent>
      -->

    </Discovery>

    <!--
      Active fault detector periodically ping other agents for liveness. It is capable
      of quickly detect other agent down when the host or network is down.
    -->
    <Active-Fault-Detection>

      <!--
        Whether or not to enable this (Default = true)
      -->
      <Enabled>true</Enabled>

      <!--
        Period between pinging (in seconds)
      -->
      <Ping-Period>4</Ping-Period>

      <!--
        The timeout period to consider the other agent is down. (in seconds)
      -->
      <Timeout-Period>15</Timeout-Period>

      <!--
        Number of tries before declaring the agent dead
        Default = 1
      -->
      <Num-Retries>2</Num-Retries>

      <!--
        (Advanced) Whether to enable send suspect.
        Default: true
      -->
      <Enable-Send-Suspect>true</Enable-Send-Suspect>

      <!--
        (Advanced) Whether to enable suspect verification. The agent will send ping the suspected agent. If it does not
        received the reply within the timeout period. It will disconnect the suspected agent. Note. It will send the
        ping message only once.
        default: false
      -->
      <Enable-Suspect-Verify>false</Enable-Suspect-Verify>

      <!--
        (Advanced) Detect network partition. If network partition, it will disconnect all peers.
        Default: false
      -->
      <Detect-Partition>false</Detect-Partition>

      <!--
        (Advanced) The timeout period to consider that the partition exist.
       Default: 120
      -->
      <Detect-Partition-Timeout>30</Detect-Partition-Timeout>

    </Active-Fault-Detection>

    <!--
      Specify parameters for making connection to other agents.
    -->
    <Default-Connection>
      <!--
        The method to send messges. Valid values: Multicast, TCP
        If Multicast is used. You have to specify Mutlicast Address.
      -->
      <Method>TCP</Method>

      <!--
        The multicast address is sent the messages to if Method is set Multicast.
      -->
      <!--
      <Multicast-Address>224.192.1.1</Multicast-Address>
      -->

      <!--
        The additional buffer size in bytes (beyond socket buffer) that can be used per connection
        before the agent stalls the incoming connection. If agent keeps stalling and unstalling
        connection, you may increase this parameter to avoid excessive stalling and unstalling. This
        setting take effects on all TCP connections.
        Default: 0
        Note: Setting this value too high will result in high memory usage when the agent
        is under heavy load.
      -->
      <TCP-Spill-Buffer-Size>0</TCP-Spill-Buffer-Size>

      <!--
        Additional buffer size for groupd channel
        Default: 20000000
      -->
      <TCP-Spill-Buffer-Size-Groupd>20000000</TCP-Spill-Buffer-Size-Groupd>

      <!--
        The client inactivity timeout. The client connection will be closed if the client fails to
        drain a single byte from the socket within the timeout. -1 to disable.
        Default: 20
      -->
      <Client-Inactivity-Timeout>20</Client-Inactivity-Timeout>

      <!--
        The agent inactivity timeout. The agent peer connection will be closed if the agent peer fails to
        drain a single byte from the socket within the timeout. -1 to disable.
        Default: 40
      -->
      <Agent-Inactivity-Timeout>40</Agent-Inactivity-Timeout>

      <!--
        In Multicast mode, you can specify the rate (in bytes/sec) which the agent may send
        messages to other agents for a service. Possible value: rate (in bytes/sec), Dynamic, None.
        Default: None
      -->
      <Multicast-Sending-Rate>100000</Multicast-Sending-Rate>

      <!--
        In Multicast mode, you can specify the rate (in bytes/sec) that the network
        interface is capable of. E.g. A good value for Fast Ethernet is around 11MB/s.
        Setting this value too high will cause too much packet loss causing sub-optimal
        performance
        Default: 11534336
      -->
      <Multicast-Max-Sending-Rate>11534336</Multicast-Max-Sending-Rate>

      <!--
        In Dynamic Multicast mode, the congestion control parameters can be tuned here.

        The first part controls how the agent adjusts the rate up to discover available bandwidth.
        The adjustment can be linear or exponential. The default is Linear/536 which means increase
        the rate by 536 bytes per RTT every RTT.

        The second part controls how the agent adjusts the rate down when the packet loss is detected.
        The adjustment can be linear or exponential. The default is Expo/0.5 which means that the agent
        will half the sending rate when there is a loss event.

        The third part specifies how long in RTT to stop sending packets after a loss event. This allows
        the receivers to catch up with the data holds up in its queue.

        The forth part specifies how long in RTT the loss event is. After the initial loss, subsequent loss
        with in this time will not be treated as a new loss event.

        Default: Linear/536;Expo/0.5;2;4
      -->
      <Congestion-Control-Tuning>Linear/536;Expo/0.5;2;4</Congestion-Control-Tuning>

      <!--
        In TCP mode, if the connect operation fails, how many times to retry before
        failing. Note that if remote agent still sends HELLO message, it will try
        to connect again.
        Default = 3
      -->
      <Connect-Retry-Count>3</Connect-Retry-Count>

      <!--
        In TCP mode, if the connect operation fails, how long in seconds to sleep before
        retry.
        Default = 20
      -->
      <Connect-Fail-Sleep>20</Connect-Fail-Sleep>

    </Default-Connection>

    <!--
      Default group comm service configuration. The configuration may be override by
      individual group comm service by programming.
    -->
    <Default-Group-Comm-Svc-Config>
      <!--
        The timeout for join operation (in ms)
      -->
      <Join-Timeout>60000</Join-Timeout>

      <!--
        The period to check/send heartbeat (in ms)
      -->
      <Heartbeat-Period>5000</Heartbeat-Period>

      <!--
        How long before we consider the member dead if the member does not respond to the heartbeat (in ms)
      -->
      <Alive-Timeout>30000</Alive-Timeout>

      <!--
        The period to send stable messages (in ms)
      -->
      <Stable-Msg-Resp-Period>60000</Stable-Msg-Resp-Period>

      <!--
        The period to clean up stable messages (in ms)
      -->
      <Cleanup-Msg-Period>60000</Cleanup-Msg-Period>

      <!--
        The timeout before printing out diagnostic message during flush algorithm (in ms)
      -->
      <Diag-Timeout>30000</Diag-Timeout>

      <!--
        The period to ping group daemon (in ms)
      -->
      <Groupd-Ping-Period>20000</Groupd-Ping-Period>

      <!--
        The timeout for group daemon's reply (in ms)
      -->
      <Groupd-Ping-Timeout>60000</Groupd-Ping-Timeout>

      <!--
        How many times of bad ping before leaving the group
      -->
      <Max-Bad-Ping-Count>4</Max-Bad-Ping-Count>
    </Default-Group-Comm-Svc-Config>

    <!--
      Whether to enable message routing.
      Default: false
    -->
    <Enable-Message-Routing>false</Enable-Message-Routing>

    <!--
      Message routing
      Route messages to other agents on a different network. The routing rule
      is specified statically.
    -->
    <Message-Routing>

      <!--
        The network id
        Different network must have a different network id.
      -->
      <Network-Id>1</Network-Id>

      <!--
        The hop count
        When the message is passed between different networks, hop count is reduced by one. When
        the hop count reaches zero, the message is discarded. In case the network is misconfigured,
        the hop count prevents the message to stay in the network forever.
        Default: 64
      -->
      <Hop-Count>64</Hop-Count>

      <!--
        The routing entry
      -->
      <Routing-Entry>

        <!--
          The service number
        -->
        <Service>5678</Service>

        <!--
          The destination agent address. This is the address that the agent will forward messages to.
        -->
        <Agent-Address>172.16.246.131</Agent-Address>

        <!--
          The sending network id. The sending network id of the message must match this sending network id for
          the message to be forwarded. 0 represents the current network. This element can be specified more than once.
          Default: 0
        -->
        <Sending-Network>0</Sending-Network>

        <!--
          Subject pattern. The message must match one of these patterns to be forwarded. This element can be
          specified more than once.
        -->
        <Subject-Pattern>TEST.&gt;</Subject-Pattern>

        <!--
          Whether to enable fault-tolerance support.
          Default: false
        -->
        <Enable-Fault-Tolerance>false</Enable-Fault-Tolerance>

        <!--
          Fault Tolerance support
          You may specify two or more agents in a fault tolerance group. Bitsflow will try to have one agent
          actively routing messages. When the active agent crashes, another agent will become active.

          Note: The FT is not perfect. There will be times when the message may be sent twice or not at all
          when there is a transition. The application must be able to handle this.
        -->
        <Fault-Tolerance>

          <!--
            The group name
          -->
          <Group-Name>TEST</Group-Name>

          <!--
            The rank
            The higher rank agent will become active before lower rank agent.
          -->
          <Rank>100</Rank>

          <!--
            The period to send a heartbeat message (in ms.)
            Default: 1000
          -->
          <Heartbeat-Period>1000</Heartbeat-Period>

          <!--
            The period to consider agent dies when the heartbeat is missing (in ms.) This number should be 3x-5x of
            heartbeat period.
            Default: 3000
          -->
          <Activation-Period>3000</Activation-Period>
        </Fault-Tolerance>
      </Routing-Entry>
    </Message-Routing>

    <!--
      Service Definition
      The service defined here will be started automatically at start up.
    -->
    <Service Name="5678">
      <Name>5678</Name>
      <Priority>5</Priority>
    </Service>

  </Agent>
</Configuration>
